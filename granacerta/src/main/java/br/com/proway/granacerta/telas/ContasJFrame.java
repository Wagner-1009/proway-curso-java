/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.proway.granacerta.telas;

import br.com.proway.granacerta.bancodadosGranaCerta.BancoDadosUtil;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author wagne
 */
public class ContasJFrame extends javax.swing.JFrame {
    
    private final DefaultTableModel  modeloTabela;
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(ContasJFrame.class.getName());
    private int idEditar;
    /**
     * Construtor é chamado quando ocorre um new da classe, exemplo: new contasJFrame();
     */
    public ContasJFrame() {
        initComponents();
        //pegar o medelo do jtable das contas fazendo um
        //cast para defaultTableModel1
        modeloTabela = (DefaultTableModel) jTableContas.getModel();
        //idEditar começa com -1 pq é o modo de cadastro
        idEditar = -1;
        consultarContas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupTipo = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableContas = new javax.swing.JTable();
        jLabelNome = new javax.swing.JLabel();
        jTextFieldNome = new javax.swing.JTextField();
        jLabelTipo = new javax.swing.JLabel();
        jRadioButtonTipoPoupanca = new javax.swing.JRadioButton();
        jRadioButtonTipoCorrente = new javax.swing.JRadioButton();
        jLabelSaldo = new javax.swing.JLabel();
        jFormattedTextFieldSaldo = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescricao = new javax.swing.JTextArea();
        jButtonEditar = new javax.swing.JButton();
        jButtonApagar = new javax.swing.JButton();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jLabelDescricao = new javax.swing.JLabel();

        jScrollPane3.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Grana Certa | ");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTableContas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Tipo", "Saldo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableContas.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTableContas);
        if (jTableContas.getColumnModel().getColumnCount() > 0) {
            jTableContas.getColumnModel().getColumn(0).setResizable(false);
            jTableContas.getColumnModel().getColumn(1).setResizable(false);
            jTableContas.getColumnModel().getColumn(2).setResizable(false);
            jTableContas.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabelNome.setText("Nome: ");

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });

        jLabelTipo.setText("Tipo:");

        buttonGroupTipo.add(jRadioButtonTipoPoupanca);
        jRadioButtonTipoPoupanca.setText("Poupança");

        buttonGroupTipo.add(jRadioButtonTipoCorrente);
        jRadioButtonTipoCorrente.setText("Corrente");

        jLabelSaldo.setText("Saldo:");

        jTextAreaDescricao.setColumns(20);
        jTextAreaDescricao.setRows(5);
        jScrollPane2.setViewportView(jTextAreaDescricao);

        jButtonEditar.setText("Editar");
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });

        jButtonApagar.setText("Apagar");
        jButtonApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonApagarActionPerformed(evt);
            }
        });

        jButtonSalvar.setText("Salvar");
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCancelar.setText("Cancelar");

        jLabelDescricao.setText("Descrição:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSalvar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jRadioButtonTipoPoupanca, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(jRadioButtonTipoCorrente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldNome)
                        .addComponent(jFormattedTextFieldSaldo)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                        .addComponent(jLabelNome, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabelDescricao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonApagar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonEditar)
                    .addComponent(jButtonApagar)
                    .addComponent(jLabelNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTipo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonTipoPoupanca)
                            .addComponent(jRadioButtonTipoCorrente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelSaldo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelDescricao)
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonSalvar)
                            .addComponent(jButtonCancelar)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        var home = new HomeContasJFrame();
        home.setVisible(true);  
        
    }//GEN-LAST:event_formWindowClosed

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        String nome = jTextFieldNome.getText();     
        double saldo = Double.parseDouble(jFormattedTextFieldSaldo.getText().replace(",","."));
                                                                                   
        String descricao = jTextAreaDescricao.getText();
        int tipoSelecionado;
        if(jRadioButtonTipoPoupanca.isSelected()){
            tipoSelecionado = 0;
        }else{
            tipoSelecionado = 1;
        }
        
        if(idEditar == -1){
            cadastrarConta(nome, tipoSelecionado, saldo, descricao);
        }else{
            editarConta(nome, tipoSelecionado, saldo, descricao);
        }
        
        //comando que sera executado no banco de dados
        cadastrarConta(nome, tipoSelecionado, saldo, descricao);
    }//GEN-LAST:event_jButtonSalvarActionPerformed
      
    private void editarConta(String nome, int tipoSelecionado, double saldo, String descricao){
            String sql = "UPDATE contas SET nome = ?, tipo = ?, saldo = ? , descricao = ? WHERE id ?";
            try(Connection conexao = BancoDadosUtil.getConnection()){
                PreparedStatement preparadorSQL = conexao.prepareStatement(sql);
                preparadorSQL.setString(1, nome);
                preparadorSQL.setInt(2, tipoSelecionado);
                preparadorSQL.setDouble(3, saldo);
                preparadorSQL.setString(4, descricao);
                preparadorSQL.execute();
                limparCampos();
                consultarContas();
                JOptionPane.showMessageDialog(null, "Conta alterada com sucesso!");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Não foi possível alterar a conta");
                e.printStackTrace();
            }
        }
    private void jButtonApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonApagarActionPerformed
        String sql = "DELETE FROM contas WHERE id = ?";
        
        int indiceLinhaSelecionada = jTableContas.getSelectedRow();
        idEditar = Integer.parseInt(modeloTabela.getValueAt(indiceLinhaSelecionada, 0).toString());
        
        try (Connection conexao = BancoDadosUtil.getConnection()){
            PreparedStatement preparadorDeSQL = conexao.prepareStatement(sql);
            preparadorDeSQL.setInt(1, idEditar);
            preparadorDeSQL.execute();
            JOptionPane.showMessageDialog(null, "Conta apagada com sucesso");
            consultarContas();
            idEditar = -1;
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel apagar a conta");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonApagarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        String sql = "SELECT nome, saldo, tipo, descricao FROM contasWHERE id = ?";
        
        int indiceLinhaSelecionada = jTableContas.getSelectedRow();
        idEditar = Integer.parseInt(modeloTabela.getValueAt(indiceLinhaSelecionada, 0).toString());
        
        try (Connection conexao = BancoDadosUtil.getConnection()){
            PreparedStatement preparadorDeSQL = conexao.prepareStatement(sql);
            preparadorDeSQL.setInt(1, idEditar);
            preparadorDeSQL.execute();
            ResultSet registros = preparadorDeSQL.getResultSet();
            //retorna uma lista, nesse caso dos registros
            
            if(registros.next()){
                String nome = registros.getString("nome");
                double saldo = registros.getDouble("saldo");
                int tipo = registros.getInt("tipo");
                String descricao = registros.getString("descricao");
                jTextFieldNome.setText(nome);
                jFormattedTextFieldSaldo.setText(String.valueOf(saldo).replace(".", ","));
                jTextAreaDescricao.setText(descricao);
                if(tipo == 0){
                    jRadioButtonTipoPoupanca.setSelected(true);
                }else{
                    jRadioButtonTipoCorrente.setSelected(true);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possivel consultar a conta");
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    //metodo sem retorno
    private void limparCampos(){
        jTextFieldNome.setText("");
        jTextAreaDescricao.setText("");
        buttonGroupTipo.clearSelection();
        jFormattedTextFieldSaldo.setText("");
        idEditar = -1;
    }
    
    private void consultarContas(){
        try(Connection conexao = BancoDadosUtil.getConnection()){
            String sql = "SELECT id, nome, saldo, tipo, descricao FROM contas";
            Statement executorSql = conexao.createStatement();
            executorSql.execute(sql);
            ResultSet registros = executorSql.getResultSet();
            while(registros.next()){
                int id = registros.getInt("id");
                String nome = registros.getString("nome");
                double saldo = registros.getDouble("saldo");
                int tipo = registros.getInt("tipo");
                modeloTabela.addRow(new Object[] {id , nome, tipo, saldo});
                
            }
                
            
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Não foi possível consultar as contas");
        }
       
    }
    
    private void cadastrarConta(String nome, int tipoSelecionado, double saldo, String descricao){
        String sql= "INSERT INTO contas (nome, tipo, saldo, descricao) VALUES (?,?,?,?)";
        try(Connection conexao = BancoDadosUtil.getConnection()){
            PreparedStatement preparadorDeSQL = conexao.prepareStatement(sql);
            preparadorDeSQL.setString(1, nome);
            preparadorDeSQL.setInt(2, tipoSelecionado);
            preparadorDeSQL.setDouble(3, saldo);
            preparadorDeSQL.setString(4, descricao);
            preparadorDeSQL.execute();
            JOptionPane.showMessageDialog(null, "Conta cadastrada com sucesso!");
            limparCampos();
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Não foi possivel cadastrar a conta");
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTipo;
    private javax.swing.JButton jButtonApagar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JFormattedTextField jFormattedTextFieldSaldo;
    private javax.swing.JLabel jLabelDescricao;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelTipo;
    private javax.swing.JRadioButton jRadioButtonTipoCorrente;
    private javax.swing.JRadioButton jRadioButtonTipoPoupanca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableContas;
    private javax.swing.JTextArea jTextAreaDescricao;
    private javax.swing.JTextField jTextFieldNome;
    // End of variables declaration//GEN-END:variables
}
